<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan">
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
        <collectionProp name="Arguments.arguments">
          <elementProp name="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;5.0&quot; jmeter=&quot;5.6.3&quot;&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;5.0&quot; jmeter=&quot;5.6.3&quot;&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;hashTree&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;hashTree&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot;&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot;&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot;&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot;&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;/elementProp&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;/elementProp&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;/TestPlan&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;/TestPlan&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;hashTree&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;hashTree&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Activity 8&quot;&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Activity 8&quot;&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;intProp name=&quot;ThreadGroup.num_threads&quot;&gt;5&lt;/intProp&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;intProp name=&quot;ThreadGroup.num_threads&quot;&gt;5&lt;/intProp&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;intProp name=&quot;ThreadGroup.ramp_time&quot;&gt;1&lt;/intProp&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;intProp name=&quot;ThreadGroup.ramp_time&quot;&gt;1&lt;/intProp&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;boolProp name=&quot;ThreadGroup.same_user_on_next_iteration&quot;&gt;true&lt;/boolProp&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;boolProp name=&quot;ThreadGroup.same_user_on_next_iteration&quot;&gt;true&lt;/boolProp&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot;&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot;&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;stringProp name=&quot;LoopController.loops&quot;&gt;1&lt;/stringProp&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;stringProp name=&quot;LoopController.loops&quot;&gt;1&lt;/stringProp&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;/elementProp&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;/elementProp&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;/ThreadGroup&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;/ThreadGroup&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;hashTree&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;hashTree&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass=&quot;com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui&quot; testclass=&quot;com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler&quot; testname=&quot;jp@gc - WebDriver Sampler&quot;&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass=&quot;com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui&quot; testclass=&quot;com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler&quot; testname=&quot;jp@gc - WebDriver Sampler&quot;&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;stringProp name=&quot;WebDriverSampler.script&quot;&gt;// Import statements" elementType="Argument">
            <stringProp name="Argument.name">&lt;stringProp name=&quot;WebDriverSampler.script&quot;&gt;// Import statements</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="import org.openqa.selenium.*;" elementType="Argument">
            <stringProp name="Argument.name">import org.openqa.selenium.*;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="import org.openqa.selenium.support.ui.*;" elementType="Argument">
            <stringProp name="Argument.name">import org.openqa.selenium.support.ui.*;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="// Captures sampler&amp;apos;s start time" elementType="Argument">
            <stringProp name="Argument.name">// Captures sampler&amp;apos;s start time</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="WDS.sampleResult.sampleStart();" elementType="Argument">
            <stringProp name="Argument.name">WDS.sampleResult.sampleStart();</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="WDS.log.info(&amp;quot;Test started&amp;quot;);" elementType="Argument">
            <stringProp name="Argument.name">WDS.log.info(&amp;quot;Test started&amp;quot;);</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="// Load the page" elementType="Argument">
            <stringProp name="Argument.name">// Load the page</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="WDS.browser.get(&amp;quot;https://v1.training-support.net/selenium/login-form&amp;quot;);" elementType="Argument">
            <stringProp name="Argument.name">WDS.browser.get(&amp;quot;https://v1.training-support.net/selenium/login-form&amp;quot;);</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="WDS.log.info(&amp;quot;Test page opened&amp;quot;);" elementType="Argument">
            <stringProp name="Argument.name">WDS.log.info(&amp;quot;Test page opened&amp;quot;);</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="// Credentials" elementType="Argument">
            <stringProp name="Argument.name">// Credentials</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="String[] username = {&amp;quot;admin&amp;quot;};" elementType="Argument">
            <stringProp name="Argument.name">String[] username = {&amp;quot;admin&amp;quot;};</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="String[] password = {&amp;quot;password&amp;quot;};" elementType="Argument">
            <stringProp name="Argument.name">String[] password = {&amp;quot;password&amp;quot;};</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="// Find credential fields and enter values" elementType="Argument">
            <stringProp name="Argument.name">// Find credential fields and enter values</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="WDS.browser.findElement(By.id(&amp;quot;username&amp;quot;)).sendKeys(username);" elementType="Argument">
            <stringProp name="Argument.name">WDS.browser.findElement(By.id(&amp;quot;username&amp;quot;)).sendKeys(username);</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="WDS.browser.findElement(By.id(&amp;quot;password&amp;quot;)).sendKeys(password);" elementType="Argument">
            <stringProp name="Argument.name">WDS.browser.findElement(By.id(&amp;quot;password&amp;quot;)).sendKeys(password);</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="// Find Login button and click it" elementType="Argument">
            <stringProp name="Argument.name">// Find Login button and click it</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="WDS.browser.findElement(By.xpath(&amp;quot;//button[text()=&amp;apos;Log in&amp;apos;]&amp;quot;)).click();" elementType="Argument">
            <stringProp name="Argument.name">WDS.browser.findElement(By.xpath(&amp;quot;//button[text()=&amp;apos;Log in&amp;apos;]&amp;quot;)).click();</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="WDS.log.info(&amp;quot;Logged in&amp;quot;);" elementType="Argument">
            <stringProp name="Argument.name">WDS.log.info(&amp;quot;Logged in&amp;quot;);</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="// Find confirmation message and print it to log" elementType="Argument">
            <stringProp name="Argument.name">// Find confirmation message and print it to log</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="String message = WDS.browser.findElement(By.id(&amp;quot;action-confirmation&amp;quot;));" elementType="Argument">
            <stringProp name="Argument.name">String message = WDS.browser.findElement(By.id(&amp;quot;action-confirmation&amp;quot;));</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="WDS.log.info(&amp;quot;Login message: &amp;quot; + message.getText());" elementType="Argument">
            <stringProp name="Argument.name">WDS.log.info(&amp;quot;Login message: &amp;quot; + message.getText());</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="// End the test sampler" elementType="Argument">
            <stringProp name="Argument.name">// End the test sampler</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="// Also captures sampler&amp;apos;s end time" elementType="Argument">
            <stringProp name="Argument.name">// Also captures sampler&amp;apos;s end time</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="WDS.sampleResult.sampleEnd();" elementType="Argument">
            <stringProp name="Argument.name">WDS.sampleResult.sampleEnd();</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="WDS.log.info(&amp;quot;Test ended&amp;quot;);&lt;/stringProp&gt;" elementType="Argument">
            <stringProp name="Argument.name">WDS.log.info(&amp;quot;Test ended&amp;quot;);&lt;/stringProp&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;stringProp name=&quot;WebDriverSampler.parameters&quot;&gt;&lt;/stringProp&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;stringProp name=&quot;WebDriverSampler.parameters&quot;&gt;&lt;/stringProp&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;stringProp name=&quot;WebDriverSampler.language&quot;&gt;java&lt;/stringProp&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;stringProp name=&quot;WebDriverSampler.language&quot;&gt;java&lt;/stringProp&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;/com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;/com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;hashTree/&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;hashTree/&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;com.googlecode.jmeter.plugins.webdriver.config.FirefoxDriverConfig guiclass=&quot;com.googlecode.jmeter.plugins.webdriver.config.gui.FirefoxDriverConfigGui&quot; testclass=&quot;com.googlecode.jmeter.plugins.webdriver.config.FirefoxDriverConfig&quot; testname=&quot;jp@gc - Firefox Driver Config&quot;&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;com.googlecode.jmeter.plugins.webdriver.config.FirefoxDriverConfig guiclass=&quot;com.googlecode.jmeter.plugins.webdriver.config.gui.FirefoxDriverConfigGui&quot; testclass=&quot;com.googlecode.jmeter.plugins.webdriver.config.FirefoxDriverConfig&quot; testname=&quot;jp@gc - Firefox Driver Config&quot;&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;boolProp name=&quot;WebDriverConfig.acceptinsecurecerts&quot;&gt;false&lt;/boolProp&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;boolProp name=&quot;WebDriverConfig.acceptinsecurecerts&quot;&gt;false&lt;/boolProp&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;boolProp name=&quot;WebDriverConfig.reset_per_iteration&quot;&gt;false&lt;/boolProp&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;boolProp name=&quot;WebDriverConfig.reset_per_iteration&quot;&gt;false&lt;/boolProp&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;stringProp name=&quot;WebDriverConfig.driver_path&quot;&gt;C:\Users\0013MO744\Downloads\apache-jmeter-5.6.3\apache-jmeter-5.6.3\geckodriver-v0.34.0-win64\geckodriver.exe&lt;/stringProp&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;stringProp name=&quot;WebDriverConfig.driver_path&quot;&gt;C:\Users\0013MO744\Downloads\apache-jmeter-5.6.3\apache-jmeter-5.6.3\geckodriver-v0.34.0-win64\geckodriver.exe&lt;/stringProp&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;boolProp name=&quot;WebDriverConfig.dev_mode&quot;&gt;false&lt;/boolProp&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;boolProp name=&quot;WebDriverConfig.dev_mode&quot;&gt;false&lt;/boolProp&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;boolProp name=&quot;WebDriverConfig.headless&quot;&gt;false&lt;/boolProp&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;boolProp name=&quot;WebDriverConfig.headless&quot;&gt;false&lt;/boolProp&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;boolProp name=&quot;WebDriverConfig.maximize_browser&quot;&gt;true&lt;/boolProp&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;boolProp name=&quot;WebDriverConfig.maximize_browser&quot;&gt;true&lt;/boolProp&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;boolProp name=&quot;FirefoxDriverConfig.general.useragent.override.enabled&quot;&gt;false&lt;/boolProp&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;boolProp name=&quot;FirefoxDriverConfig.general.useragent.override.enabled&quot;&gt;false&lt;/boolProp&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;boolProp name=&quot;FirefoxDriverConfig.network.negotiate-auth.allow-insecure-ntlm-v1&quot;&gt;false&lt;/boolProp&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;boolProp name=&quot;FirefoxDriverConfig.network.negotiate-auth.allow-insecure-ntlm-v1&quot;&gt;false&lt;/boolProp&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;collectionProp name=&quot;FirefoxDriverConfig.general.extensions&quot;/&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;collectionProp name=&quot;FirefoxDriverConfig.general.extensions&quot;/&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;collectionProp name=&quot;FirefoxDriverConfig.general.preferences&quot;/&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;collectionProp name=&quot;FirefoxDriverConfig.general.preferences&quot;/&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;stringProp name=&quot;WebDriverConfig.proxy_type&quot;&gt;SYSTEM&lt;/stringProp&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;stringProp name=&quot;WebDriverConfig.proxy_type&quot;&gt;SYSTEM&lt;/stringProp&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;stringProp name=&quot;WebDriverConfig.proxy_pac_url&quot;&gt;&lt;/stringProp&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;stringProp name=&quot;WebDriverConfig.proxy_pac_url&quot;&gt;&lt;/stringProp&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;stringProp name=&quot;WebDriverConfig.http_host&quot;&gt;&lt;/stringProp&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;stringProp name=&quot;WebDriverConfig.http_host&quot;&gt;&lt;/stringProp&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;intProp name=&quot;WebDriverConfig.http_port&quot;&gt;8080&lt;/intProp&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;intProp name=&quot;WebDriverConfig.http_port&quot;&gt;8080&lt;/intProp&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;boolProp name=&quot;WebDriverConfig.use_http_for_all_protocols&quot;&gt;true&lt;/boolProp&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;boolProp name=&quot;WebDriverConfig.use_http_for_all_protocols&quot;&gt;true&lt;/boolProp&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;stringProp name=&quot;WebDriverConfig.https_host&quot;&gt;&lt;/stringProp&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;stringProp name=&quot;WebDriverConfig.https_host&quot;&gt;&lt;/stringProp&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;intProp name=&quot;WebDriverConfig.https_port&quot;&gt;8080&lt;/intProp&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;intProp name=&quot;WebDriverConfig.https_port&quot;&gt;8080&lt;/intProp&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;boolProp name=&quot;WebDriverConfig.use_ftp_proxy&quot;&gt;true&lt;/boolProp&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;boolProp name=&quot;WebDriverConfig.use_ftp_proxy&quot;&gt;true&lt;/boolProp&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;stringProp name=&quot;WebDriverConfig.ftp_host&quot;&gt;&lt;/stringProp&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;stringProp name=&quot;WebDriverConfig.ftp_host&quot;&gt;&lt;/stringProp&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;intProp name=&quot;WebDriverConfig.ftp_port&quot;&gt;8080&lt;/intProp&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;intProp name=&quot;WebDriverConfig.ftp_port&quot;&gt;8080&lt;/intProp&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;boolProp name=&quot;WebDriverConfig.use_socks_proxy&quot;&gt;true&lt;/boolProp&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;boolProp name=&quot;WebDriverConfig.use_socks_proxy&quot;&gt;true&lt;/boolProp&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;stringProp name=&quot;WebDriverConfig.socks_host&quot;&gt;&lt;/stringProp&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;stringProp name=&quot;WebDriverConfig.socks_host&quot;&gt;&lt;/stringProp&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;intProp name=&quot;WebDriverConfig.socks_port&quot;&gt;8080&lt;/intProp&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;intProp name=&quot;WebDriverConfig.socks_port&quot;&gt;8080&lt;/intProp&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;stringProp name=&quot;WebDriverConfig.no_proxy&quot;&gt;localhost&lt;/stringProp&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;stringProp name=&quot;WebDriverConfig.no_proxy&quot;&gt;localhost&lt;/stringProp&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;stringProp name=&quot;WebDriverConfig.custom_capabilites&quot;&gt;&lt;/stringProp&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;stringProp name=&quot;WebDriverConfig.custom_capabilites&quot;&gt;&lt;/stringProp&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;/com.googlecode.jmeter.plugins.webdriver.config.FirefoxDriverConfig&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;/com.googlecode.jmeter.plugins.webdriver.config.FirefoxDriverConfig&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;hashTree/&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;hashTree/&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot;&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot;&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;objProp&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;objProp&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;name&gt;saveConfig&lt;/name&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;name&gt;saveConfig&lt;/name&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;value class=&quot;SampleSaveConfiguration&quot;&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;value class=&quot;SampleSaveConfiguration&quot;&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;time&gt;true&lt;/time&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;time&gt;true&lt;/time&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;latency&gt;true&lt;/latency&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;latency&gt;true&lt;/latency&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;timestamp&gt;true&lt;/timestamp&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;timestamp&gt;true&lt;/timestamp&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;success&gt;true&lt;/success&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;success&gt;true&lt;/success&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;label&gt;true&lt;/label&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;label&gt;true&lt;/label&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;code&gt;true&lt;/code&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;code&gt;true&lt;/code&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;message&gt;true&lt;/message&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;message&gt;true&lt;/message&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;threadName&gt;true&lt;/threadName&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;threadName&gt;true&lt;/threadName&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;dataType&gt;true&lt;/dataType&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;dataType&gt;true&lt;/dataType&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;encoding&gt;false&lt;/encoding&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;encoding&gt;false&lt;/encoding&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;assertions&gt;true&lt;/assertions&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;assertions&gt;true&lt;/assertions&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;subresults&gt;true&lt;/subresults&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;subresults&gt;true&lt;/subresults&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;responseData&gt;false&lt;/responseData&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;responseData&gt;false&lt;/responseData&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;samplerData&gt;false&lt;/samplerData&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;samplerData&gt;false&lt;/samplerData&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;xml&gt;false&lt;/xml&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;xml&gt;false&lt;/xml&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;fieldNames&gt;true&lt;/fieldNames&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;fieldNames&gt;true&lt;/fieldNames&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;responseHeaders&gt;false&lt;/responseHeaders&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;responseHeaders&gt;false&lt;/responseHeaders&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;requestHeaders&gt;false&lt;/requestHeaders&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;requestHeaders&gt;false&lt;/requestHeaders&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;saveAssertionResultsFailureMessage&gt;true&lt;/saveAssertionResultsFailureMessage&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;saveAssertionResultsFailureMessage&gt;true&lt;/saveAssertionResultsFailureMessage&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;bytes&gt;true&lt;/bytes&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;bytes&gt;true&lt;/bytes&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;sentBytes&gt;true&lt;/sentBytes&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;sentBytes&gt;true&lt;/sentBytes&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;url&gt;true&lt;/url&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;url&gt;true&lt;/url&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;threadCounts&gt;true&lt;/threadCounts&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;threadCounts&gt;true&lt;/threadCounts&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;idleTime&gt;true&lt;/idleTime&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;idleTime&gt;true&lt;/idleTime&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;connectTime&gt;true&lt;/connectTime&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;connectTime&gt;true&lt;/connectTime&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;/value&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;/value&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;/objProp&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;/objProp&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;/ResultCollector&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;/ResultCollector&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;hashTree/&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;hashTree/&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;/hashTree&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;/hashTree&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;/hashTree&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;/hashTree&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;/hashTree&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;/hashTree&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="&lt;/jmeterTestPlan&gt;" elementType="Argument">
            <stringProp name="Argument.name">&lt;/jmeterTestPlan&gt;</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
    </TestPlan>
    <hashTree/>
  </hashTree>
</jmeterTestPlan>
